{"ast":null,"code":"var _jsxFileName = \"/Users/hayungyoo/project/konfold_front/src/AFoutput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport * as $3Dmol from '3dmol/build/3Dmol.js';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AFoutput() {\n  _s();\n  const [value, setValue] = useState({\n    proteinId: \"\"\n  });\n  const handleChange = e => {\n    setValue(e.nativeEvent.target.value);\n  };\n  const handleClick = () => {\n    alert(\"현재 폼의 값은 ${value} 입니다\");\n  };\n  useEffect(() => {\n    fetch(\"/api/Input\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      },\n      body: JSON.stringify(value)\n    }).then(res => {\n      console.log(res);\n      return res.json();\n    }).then(res => {\n      console.log(res);\n    });\n    const script = document.createElement(\"script\");\n    script.src = \"https://3Dmol.org/build/3Dmol-min.js\";\n    script.async = true;\n    document.body.appendChild(script);\n  });\n\n  // 시각화\n  $(function () {\n    let element = $('#container-01');\n    let config = {\n      backgroundColor: 'orange'\n    };\n    let viewer = $3Dmol.createViewer(element, config);\n    viewer.addSphere({\n      center: {\n        x: 0,\n        y: 0,\n        z: 0\n      },\n      radius: 10.0,\n      color: 'green'\n    });\n    viewer.zoomTo();\n    viewer.render();\n    viewer.zoom(0.8, 2000);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container-01\",\n    className: \"mol-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this);\n}\n_s(AFoutput, \"jnF6zggdMnSu+H1/0+oCZ4DyeS4=\");\n_c = AFoutput;\nvar _c;\n$RefreshReg$(_c, \"AFoutput\");","map":{"version":3,"names":["React","useState","useEffect","$3Dmol","$","jsxDEV","_jsxDEV","AFoutput","_s","value","setValue","proteinId","handleChange","e","nativeEvent","target","handleClick","alert","fetch","method","headers","body","JSON","stringify","then","res","console","log","json","script","document","createElement","src","async","appendChild","element","config","backgroundColor","viewer","createViewer","addSphere","center","x","y","z","radius","color","zoomTo","render","zoom","id","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hayungyoo/project/konfold_front/src/AFoutput.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport * as $3Dmol from '3dmol/build/3Dmol.js';\nimport $ from 'jquery'\n\nexport default function AFoutput() {\n\n  const [value, setValue] = useState({\n    proteinId : \"\"\n  });\n\n  const handleChange = (e) => {\n    setValue(e.nativeEvent.target.value);\n  };\n\n  const handleClick = () => {\n    alert(\"현재 폼의 값은 ${value} 입니다\");\n  };\n\n  useEffect(() => {\n    fetch(\"/api/Input\", {\n            method : \"POST\",\n            headers : {\n                \"Content-Type\":\"application/json; charset=utf-8\"\n            },\n            body: JSON.stringify(value)\n        })\n        .then(res=>{\n            console.log(res)\n            return res.json();\n        })\n        .then(res=> {\n            console.log(res);\n        });\n\n\n    const script = document.createElement(\"script\");\n    script.src = \"https://3Dmol.org/build/3Dmol-min.js\";\n    script.async = true;\n    document.body.appendChild(script);\n  });\n\n  // 시각화\n  $(function() {\n    let element = $('#container-01');\n    let config = { backgroundColor: 'orange' };\n    let viewer = $3Dmol.createViewer( element, config );\n    viewer.addSphere({ center: {x:0, y:0, z:0}, radius: 10.0, color: 'green' });\n    viewer.zoomTo();\n    viewer.render();\n    viewer.zoom(0.8, 2000);\n  });\n      \n\n  return (\n  <div id=\"container-01\" className=\"mol-container\"></div>\n  );\n\n  }"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAO,KAAKC,MAAM,MAAM,sBAAsB;AAC9C,OAAOC,CAAC,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAEjC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC;IACjCU,SAAS,EAAG;EACd,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BH,QAAQ,CAACG,CAAC,CAACC,WAAW,CAACC,MAAM,CAACN,KAAK,CAAC;EACtC,CAAC;EAED,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxBC,KAAK,CAAC,uBAAuB,CAAC;EAChC,CAAC;EAEDf,SAAS,CAAC,MAAM;IACdgB,KAAK,CAAC,YAAY,EAAE;MACZC,MAAM,EAAG,MAAM;MACfC,OAAO,EAAG;QACN,cAAc,EAAC;MACnB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,KAAK;IAC9B,CAAC,CAAC,CACDe,IAAI,CAACC,GAAG,IAAE;MACPC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,OAAOA,GAAG,CAACG,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC,CACDJ,IAAI,CAACC,GAAG,IAAG;MACRC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB,CAAC,CAAC;IAGN,MAAMI,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAG,sCAAsC;IACnDH,MAAM,CAACI,KAAK,GAAG,IAAI;IACnBH,QAAQ,CAACT,IAAI,CAACa,WAAW,CAACL,MAAM,CAAC;EACnC,CAAC,CAAC;;EAEF;EACAzB,CAAC,CAAC,YAAW;IACX,IAAI+B,OAAO,GAAG/B,CAAC,CAAC,eAAe,CAAC;IAChC,IAAIgC,MAAM,GAAG;MAAEC,eAAe,EAAE;IAAS,CAAC;IAC1C,IAAIC,MAAM,GAAGnC,MAAM,CAACoC,YAAY,CAAEJ,OAAO,EAAEC,MAAO,CAAC;IACnDE,MAAM,CAACE,SAAS,CAAC;MAAEC,MAAM,EAAE;QAACC,CAAC,EAAC,CAAC;QAAEC,CAAC,EAAC,CAAC;QAAEC,CAAC,EAAC;MAAC,CAAC;MAAEC,MAAM,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAQ,CAAC,CAAC;IAC3ER,MAAM,CAACS,MAAM,CAAC,CAAC;IACfT,MAAM,CAACU,MAAM,CAAC,CAAC;IACfV,MAAM,CAACW,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;EACxB,CAAC,CAAC;EAGF,oBACA3C,OAAA;IAAK4C,EAAE,EAAC,cAAc;IAACC,SAAS,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAGvD;AAAC/C,EAAA,CArDqBD,QAAQ;AAAAiD,EAAA,GAARjD,QAAQ;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}