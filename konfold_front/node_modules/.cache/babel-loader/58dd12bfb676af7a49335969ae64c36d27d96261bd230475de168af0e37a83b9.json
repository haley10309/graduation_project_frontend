{"ast":null,"code":"var _jsxFileName = \"/Users/hayungyoo/project/konfold_front/src/pages/Reference/HowRoseta.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HowRoseta() {\n  const Wrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #f7f7f7 ;\n  max-width: 80%;\n  margin: 0 auto;\n`;\n  function Span(_ref) {\n    let {\n      space = 20\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        paddingRight: space\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 6\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prediction_page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"refer-title\",\n      children: \"\\uC0AC\\uC6A9\\uBC95\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title-N1\",\n      children: \"2. RoseTTAFold\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title-N1\",\n      children: \"(1) RoseTTAFold(.git) cloning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"git(\\uD504\\uB85C\\uADF8\\uB798\\uBC0D \\uCF54\\uB4DC \\uBC84\\uC804 \\uAD00\\uB9AC \\uD504\\uB85C\\uADF8\\uB7A8) \\uC124\\uCE58\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code_page\",\n      children: [\"$ which git  //git \\uC124\\uCE58\\uC5EC\\uBD80 \\uD655\\uC778\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), \"$ sudo apt install git //git \\uC124\\uCE58\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"AlphaFold \\uD074\\uB85C\\uB2DD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code_page\",\n      children: [\"$ mkdir /[filename]\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 8\n      }, this), \"$ cd /[filename]  //RoseTTAFold.git\\uB97C \\uC800\\uC7A5\\uD558\\uACE0\\uC790 \\uD558\\uB294 \\uD3F4\\uB354\\uC5D0 \\uC811\\uC18D\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 8\n      }, this), \"$ git clone https://github.com/RosettaCommons/RoseTTAFold.git\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title-N1\",\n      children: \"(2) Conda environment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"miniconda \\uC124\\uCE58\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code_page\",\n      children: [\"$ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 8\n      }, this), \"$ sh Miniconda3-latest-Linux-x86_64.sh\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: \"\\uAC00\\uC0C1 \\uD658\\uACBD \\uC124\\uC815\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code_page\",\n      children: [\"// RoseTTAFold\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 8\n      }, this), \"$ conda env create -f RoseTTAFold-linux.yml // \\uAC00\\uC0C1\\uD658\\uACBD \\uAD6C\\uCD95\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 8\n      }, this), \"$ conda activate RoseTTAFold //\\uAC00\\uC0C1\\uD658\\uACBD \\uD65C\\uC131\\uD654\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 8\n      }, this), \"(RoseTTAFold) $ conda deactivate //\\uAC00\\uC0C1\\uD658\\uACBD \\uBE44\\uD65C\\uC131\\uD654\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 8\n      }, this), \"// folding\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 8\n      }, this), \"$ conda env create -f folding-linux.yml\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 8\n      }, this), \"$ conda activate folding\", /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 8\n      }, this), \"(folding) $ conda deactivate\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = HowRoseta;\nvar _c;\n$RefreshReg$(_c, \"HowRoseta\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","styled","jsxDEV","_jsxDEV","HowRoseta","Wrap","div","Span","_ref","space","style","paddingRight","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["/Users/hayungyoo/project/konfold_front/src/pages/Reference/HowRoseta.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nexport default function HowRoseta() {\n  const Wrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: #f7f7f7 ;\n  max-width: 80%;\n  margin: 0 auto;\n`;\nfunction Span({ space = 20 }){\n\treturn (\n    \t<span style={{ paddingRight: space }}></span>\n    );\n}\n\n\n\n  return (\n    <div className=\"prediction_page\">\n      \n      <h1 className=\"refer-title\">\n        사용법\n        </h1>\n        <h1 className=\"title-N1\">\n       2. RoseTTAFold\n      </h1>\n      <h1 className=\"title-N1\">\n        (1) RoseTTAFold(.git) cloning\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      git(프로그래밍 코드 버전 관리 프로그램) 설치\t\n       </h1>\n       <div className=\"code_page\">\n       $ which git\t\t//git 설치여부 확인\n        <Span></Span>\n        $ sudo apt install git\t//git 설치\n       </div>\n       \n       <h1 className=\"korean-protein-expaination\">\n       AlphaFold 클로닝\n       </h1>\n       <div className=\"code_page\">\n       $ mkdir /[filename]\n       <Span></Span>\n       $ cd /[filename]\t\t//RoseTTAFold.git를 저장하고자 하는 폴더에 접속\n       <Span></Span>\n       $ git clone https://github.com/RosettaCommons/RoseTTAFold.git\n       </div>\n       <h1 className=\"title-N1\">\n        (2) Conda environment\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      miniconda 설치\n       </h1>\n       <div className=\"code_page\">\n       $ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\t\n       <Span></Span>$ sh Miniconda3-latest-Linux-x86_64.sh\n       </div>\n\n       <h1 className=\"korean-protein-expaination\">\n       가상 환경 설정\n       </h1>\n       <div className=\"code_page\">\n       // RoseTTAFold\n       <Span></Span>$ conda env create -f RoseTTAFold-linux.yml\t// 가상환경 구축\n       <Span></Span>$ conda activate RoseTTAFold\t//가상환경 활성화\n       <Span></Span>(RoseTTAFold) $ conda deactivate\t//가상환경 비활성화\n\n       <Span></Span>// folding\n       <Span></Span>$ conda env create -f folding-linux.yml\n       <Span></Span>$ conda activate folding\n       <Span></Span>(folding) $ conda deactivate\n\n       </div>\n\n\n\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}