{"ast":null,"code":"var _jsxFileName = \"/Users/hayungyoo/konfold/konfold_front/src/pages/Pred_mech.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport NavBar_Prediction from '/Users/hayungyoo/konfold/konfold_front/src/pages/NavBar_Prediction.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pred_mech() {\n  const Wrap = styled.div`\n    display: flex;\n    flex-direction: row;\n    background: #f7f7f7 ;\n    max-width: 80%;\n    margin: 0 auto;\n    `;\n  function Span(_ref) {\n    let {\n      space = 20\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        paddingRight: space\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 6\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prediction_page\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar_Prediction, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"refer-title\",\n      children: \"\\uB2E8\\uBC31\\uC9C8 \\uAD6C\\uC870 \\uC608\\uCE21 AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title-N1\",\n      children: \"2. \\uB2E8\\uBC31\\uC9C8 \\uAD6C\\uC870 \\uC608\\uCE21 AI \\uBA54\\uCEE4\\uB2C8\\uC998\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this), \"\\u2018Deepmind\\u2019\\uC5D0\\uC11C \\uAC1C\\uBC1C\\uD55C \\uB2E8\\uBC31\\uC9C8 \\uAD6C\\uC870 \\uC608\\uCE21 \\uC778\\uACF5\\uC9C0\\uB2A5(AI) \\uD504\\uB85C\\uADF8\\uB7A8\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this), \"AlphaFold\\uB294 \\uB2E8\\uBC31\\uC9C8 \\uAD6C\\uC870\\uC608\\uCE21 \\uD559\\uC220\\uB300\\uD68C CASP(Critical Assessment of Structure Prediction)\\uC5D0\\uC11C \\uACF5\\uAC1C\\uB418\\uC5C8\\uB2E4. \\uD300\\uC5D0\\uAC8C \\uC804\\uB2EC\\uB418\\uB294 \\uC544\\uBBF8\\uB178\\uC0B0 \\uC11C\\uC5F4\\uC744 \\uBCF4\\uACE0 \\uD574\\uB2F9 \\uB2E8\\uBC31\\uC9C8 \\uAD6C\\uC870\\uB97C \\uC608\\uCE21\\uD558\\uB294 \\uBC29\\uC2DD\\uC73C\\uB85C, AlphaFold\\uB294 \\uB2E4\\uB978 \\uD300\\uC5D0 \\uBE44\\uD574 \\uC5C4\\uCCAD\\uB09C \\uC815\\uD655\\uB3C4\\uB97C \\uAC00\\uC9C4 \\uC608\\uCE21\\uACB0\\uACFC\\uB97C \\uBE60\\uB974\\uAC8C \\uC5BB\\uC5B4\\uB0C8\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), \"AlphaFold1(2018, CASP13 \\uC6B0\\uC2B9)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"korean-protein-expaination\",\n      children: [/*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Span, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this), \"AlphaFold2(2020, CASP14 \\uC6B0\\uC2B9)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrap, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"structure_prediction_precise.jpeg\",\n          alt: \"role\",\n          src: \"/img/structure_prediction_precise.jpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_c = Pred_mech;\nvar _c;\n$RefreshReg$(_c, \"Pred_mech\");","map":{"version":3,"names":["React","useEffect","useState","styled","NavBar_Prediction","jsxDEV","_jsxDEV","Pred_mech","Wrap","div","Span","_ref","space","style","paddingRight","fileName","_jsxFileName","lineNumber","columnNumber","className","children","alt","src","_c","$RefreshReg$"],"sources":["/Users/hayungyoo/konfold/konfold_front/src/pages/Pred_mech.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from 'styled-components';\nimport NavBar_Prediction from '/Users/hayungyoo/konfold/konfold_front/src/pages/NavBar_Prediction.js';\n\n\nexport default function Pred_mech(){\n\n    const Wrap = styled.div`\n    display: flex;\n    flex-direction: row;\n    background: #f7f7f7 ;\n    max-width: 80%;\n    margin: 0 auto;\n    `;\n    function Span({ space = 20 }){\n\treturn (\n    \t<span style={{ paddingRight: space }}></span>\n    );\n}\n\n    return (\n        <div className=\"prediction_page\">\n            <NavBar_Prediction/>\n            <h1 className=\"refer-title\">\n            단백질 구조 예측 AI\n            </h1>\n            <h1 className=\"title-N1\">\n        2. 단백질 구조 예측 AI 메커니즘\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      <Span /><Span />\n      ‘Deepmind’에서 개발한 단백질 구조 예측 인공지능(AI) 프로그램\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      <Span /><Span />\nAlphaFold는 단백질 구조예측 학술대회 CASP(Critical Assessment of Structure Prediction)에서 공개되었다. 팀에게 전달되는 아미노산 서열을 보고 해당 단백질 구조를 예측하는 방식으로, AlphaFold는 다른 팀에 비해 엄청난 정확도를 가진 예측결과를 빠르게 얻어냈다.\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      <Span /><Span />\n      AlphaFold1(2018, CASP13 우승)\n      </h1>\n      <h1 className=\"korean-protein-expaination\">\n      <Span /><Span />\n      AlphaFold2(2020, CASP14 우승) \n      </h1>\n      <Wrap >\n      <div>\n        <img className=\"structure_prediction_precise.jpeg\" alt=\"role\" src=\"/img/structure_prediction_precise.jpeg\" />\n      </div>\n      \n      </Wrap>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}