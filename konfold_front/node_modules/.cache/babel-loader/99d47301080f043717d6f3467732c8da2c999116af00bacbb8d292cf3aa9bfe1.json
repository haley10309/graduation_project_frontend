{"ast":null,"code":"var _jsxFileName = \"/Users/hayungyoo/konfold/konfold_front/src/AFoutput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, Component } from \"react\";\nimport { useEffect } from \"react\";\nimport * as $3Dmol from '3dmol/build/3Dmol.js';\nimport $ from 'jquery';\nimport Search from \"./pages/Search\";\nimport styled from 'styled-components';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AFoutput() {\n  _s();\n  //css 할 변수\n  const Wrap = styled.div`\n    display: flex;\n    flex-direction: row;\n    background: #f7f7f7 ;\n    max-width: 80%;\n    margin: 0 auto;\n    `;\n  function Span(_ref) {\n    let {\n      space = 20\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        paddingRight: space\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 6\n    }, this);\n  }\n  //css 끝\n\n  const [Protein_input, setProtein_input] = useState(\"\");\n  const script = document.createElement(\"script\");\n  var ptid = \"\";\n  const [loading, setLoading] = useState(null);\n  script.src = \"https://3Dmol.org/build/3Dmol-min.js\";\n  script.async = true;\n  document.body.appendChild(script);\n  const getID = async () => {\n    setLoading(true);\n    setTimeout(() => {\n      ptid = getDataLocalStorage(\"proteinId\");\n      console.log(ptid);\n    }, 3000);\n    if (localStorage.getItem(\"proteinId\")) {\n      //로컬 스토리지에 데이터가 있으면\n      ptid = getDataLocalStorage(\"proteinId\");\n      console.log(ptid);\n    } else {\n      setLoading(false);\n    }\n  };\n  const getDataLocalStorage = name => {\n    //로컬 스토리지에서 iD가져오기 \n    var localData = localStorage.getItem(name);\n    return localData;\n  };\n\n  // 시각화\n  $(function () {\n    let element = $('#id');\n    let config = {\n      backgroundColor: 'orange'\n    };\n    let viewer = $3Dmol.createViewer(element, config);\n    let getId = \"pdb:\" + ptid;\n    $3Dmol.download(getId, viewer, {}, function () {\n      viewer.setStyle({\n        'model': -1\n      }, {\n        \"cartoon\": {\n          'color': 'spectrum'\n        }\n      });\n      viewer.zoomTo();\n      viewer.render();\n      viewer.zoom(0.8, 2000);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n        color: \"#f88c6b\",\n        loading: loading //useState로 관리\n        ,\n        size: 150\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"id\",\n        className: \"mol-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"korean-protein-expaination\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Download File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(AFoutput, \"Ki3nsmI+ArNxaIGzSKNXqnzRWXc=\");\n_c = AFoutput;\nvar _c;\n$RefreshReg$(_c, \"AFoutput\");","map":{"version":3,"names":["React","useState","Component","useEffect","$3Dmol","$","Search","styled","ClipLoader","jsxDEV","_jsxDEV","AFoutput","_s","Wrap","div","Span","_ref","space","style","paddingRight","fileName","_jsxFileName","lineNumber","columnNumber","Protein_input","setProtein_input","script","document","createElement","ptid","loading","setLoading","src","async","body","appendChild","getID","setTimeout","getDataLocalStorage","console","log","localStorage","getItem","name","localData","element","config","backgroundColor","viewer","createViewer","getId","download","setStyle","zoomTo","render","zoom","className","children","color","size","id","_c","$RefreshReg$"],"sources":["/Users/hayungyoo/konfold/konfold_front/src/AFoutput.jsx"],"sourcesContent":["import React, { useState , Component} from \"react\";\nimport { useEffect } from \"react\";\nimport * as $3Dmol from '3dmol/build/3Dmol.js';\nimport $ from 'jquery';\nimport Search from \"./pages/Search\";\nimport styled from 'styled-components';\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n\n\nexport default function AFoutput()  {\n//css 할 변수\n  const Wrap = styled.div`\n    display: flex;\n    flex-direction: row;\n    background: #f7f7f7 ;\n    max-width: 80%;\n    margin: 0 auto;\n    `;\n  function Span({ space = 20 }){\n\t return (\n    \t<span style={{ paddingRight: space }}></span>\n    );\n}\n//css 끝\n\n  const [Protein_input , setProtein_input] = useState(\"\");\n  const script = document.createElement(\"script\");\n  var ptid = \"\";\n  const [loading, setLoading] = useState(null);\n  script.src = \"https://3Dmol.org/build/3Dmol-min.js\";\n  script.async = true;\n  document.body.appendChild(script);\n\n  \n  const getID = async () => {\n    setLoading(true);\n    setTimeout(() => {\n      ptid = getDataLocalStorage(\"proteinId\");\n      console.log(ptid);\n    }, 3000);\n    if (localStorage.getItem(\"proteinId\")) { //로컬 스토리지에 데이터가 있으면\n      ptid = getDataLocalStorage(\"proteinId\");\n      console.log(ptid);\n    } else {\n      setLoading(false);\n    }\n\n  }\n \n  const getDataLocalStorage = (name) => { //로컬 스토리지에서 iD가져오기 \n    var localData = localStorage.getItem(name);\n    return localData;\n  }\n  \n\n\n  // 시각화\n  $(function() {\n    let element = $('#id');\n    let config = { backgroundColor: 'orange' };\n    let viewer = $3Dmol.createViewer( element, config );\n    let getId = \"pdb:\" + ptid;\n\n    $3Dmol.download(getId, viewer, {}, function() {\n      viewer.setStyle({'model': -1}, {\"cartoon\": {'color': 'spectrum'}})\n      viewer.zoomTo();\n      viewer.render();\n      viewer.zoom(0.8, 2000);\n  })\n\n\n    \n  });\n\n      \n\n  return (\n    <div className=\"page\">\n      {loading ? (\n          <div className='container'>\n            <ClipLoader\n              color='#f88c6b'\n              loading={loading} //useState로 관리\n              size={150}\n            />\n          </div>\n        ) : (\n          <div className=\"container\">\n          <div id=\"id\" className=\"mol-container\"></div>\n          <h1 className=\"korean-protein-expaination\"></h1>\n          <button >Download File</button>\n          </div>\n        )}\n       \n    \n  </div>\n\n  );\n\n\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}