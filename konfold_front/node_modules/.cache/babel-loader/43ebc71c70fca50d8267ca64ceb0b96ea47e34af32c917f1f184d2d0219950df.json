{"ast":null,"code":"var _jsxFileName = \"/Users/hayungyoo/konfold/konfold_front/src/pages/Search.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n  const [protein, setProtein] = useState(\"\"); //입력 값 변수 [입력값, 입력값 변경]\n  const [proteinSearchID, setProteinSearchID] = useState(\"\"); // 저장 후 변수\n\n  const [button, setButton] = useState(true);\n  const isAlpha = str => /^[a-zA-Z]*$/.test(str);\n  const url = \"/api/Input\";\n  const config = {\n    \"Content-Type\": 'application/json'\n  };\n  const [loading, setLoading] = useState(false);\n\n  //로딩 화면\n\n  function changeButton() {\n    const UpperProtein = protein.toUpperCase();\n\n    // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    UpperProtein.includes(\"B\") || UpperProtein.includes(\"J\") || UpperProtein.includes(\"O\") || UpperProtein.includes(\"X\") || UpperProtein.includes(\"Z\") || UpperProtein.includes(\" \") || !isAlpha(UpperProtein) ? setButton(true) : setButton(false);\n  }\n  const handleInput = event => {\n    event.preventDefault();\n    setProtein(event.target.value); //변수 저장 완료\n    // const UpperProtein = protein.toUpperCase();\n    // UpperProtein.includes('G' ||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n  };\n\n  //api post\n\n  // prediction request\n  const post = seq => {\n    //Promise로 fetch를 감싼다\n    return new Promise((resolve, reject) => {\n      fetch(\"/api/Input\", {\n        method: \"POST\",\n        //메소드 지정\n        headers: {\n          //데이터 타입 지정\n          \"Content-Type\": \"application/json; charset=utf-8\"\n        },\n        body: JSON.stringify({\n          proteinName: seq\n        }) //데이터 JSON문자열화 후 body에 저장\n      }).then(res => {\n        //리턴값이 있으면 리턴값에 맞는 req지정\n        console.log(\"search_fetch_check:\", res);\n        return res.json();\n      }).then(res => {\n        //리턴값에 대한 처리\n        console.log(\"server_return_fetch:\", res);\n        //res 값에 따른 결과 처리       \n        if (res == null) {\n          console.log(\"데이터 가져오기 실패\");\n        }\n        setProteinSearchID(res);\n        resolve(res);\n\n        // localStorage.setItem('pdb_protein', res);\n        //console.log(pdb_predict);\n      });\n    });\n  };\n\n  // button 클릭\n  const confirm = async event => {\n    // 확인 후 다음 페이지\n    setLoading(true);\n    event.preventDefault();\n    // output저장\n    await post(protein);\n    console.log(\"proteinSearchID_test:\", proteinSearchID);\n    localStorage.setItem(\"proteinId\", proteinSearchID);\n    localStorage.setItem(\"proteinSeq\", protein);\n    if (proteinSearchID != null) {\n      //로컬 스토리지에 올릴 데이터가 있으면\n      localStorage.setItem(\"proteinId\", proteinSearchID['proteinId']);\n      localStorage.setItem(\"proteinSeq\", protein);\n      //window.location.href = \"/proteinInput\";\n      setLoading(false);\n    } else {\n      setLoading(true);\n    }\n  };\n\n  // localStorage.setItem(\"searchProteinId\", protein);\n  //localstorage 업로드\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleprotein\",\n      children: \"\\uB2E8\\uBC31\\uC9C8 \\uC2DC\\uD000\\uC2A4\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputTitle\",\n        children: \"\\uB2E8\\uBC31\\uC9C8 \\uC2DC\\uD000\\uC2A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          value: protein //input으로 받은 프로틴 시퀀스\n          ,\n          onChange: handleInput,\n          onKeyUp: changeButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessageWrap\",\n        children: \"\\uC62C\\uBC14\\uB978 \\uC2DC\\uD000\\uC2A4\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: button,\n        onClick: confirm,\n        className: \"bottomButton\",\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputTitle\",\n      children: \"\\uB2E8\\uBC31\\uC9C8 3D \\uAD6C\\uC870 \\uC2DC\\uAC01\\uD654 \\uD654\\uBA74\\uC785\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"ECXjqE9p2nq9j4KbQciVYadeirk=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","axios","Link","useEffect","useState","ClipLoader","jsxDEV","_jsxDEV","Search","_s","protein","setProtein","proteinSearchID","setProteinSearchID","button","setButton","isAlpha","str","test","url","config","loading","setLoading","changeButton","UpperProtein","toUpperCase","includes","handleInput","event","preventDefault","target","value","post","seq","Promise","resolve","reject","fetch","method","headers","body","JSON","stringify","proteinName","then","res","console","log","json","confirm","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onKeyUp","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/hayungyoo/konfold/konfold_front/src/pages/Search.js"],"sourcesContent":["import React from \"react\";\nimport axios from 'axios'  ;\nimport { Link } from \"react-router-dom\"; \nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n\nexport default function Search(){\n  \n  \n  const [protein, setProtein] = useState(\"\"); //입력 값 변수 [입력값, 입력값 변경]\n  const [proteinSearchID, setProteinSearchID] = useState(\"\") // 저장 후 변수\n  \n\n  const [button, setButton] = useState(true);\n  const isAlpha = str => /^[a-zA-Z]*$/.test(str);\n    \n  const url = \"/api/Input\";\n  const config = {\"Content-Type\": 'application/json'};\n\n  const [loading, setLoading] = useState(false);\n\n  //로딩 화면\n  \n\n  function changeButton(){\n    const UpperProtein = protein.toUpperCase();\n   \n   // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    (UpperProtein.includes(\"B\") || UpperProtein.includes(\"J\") || UpperProtein.includes(\"O\") || UpperProtein.includes(\"X\") || UpperProtein.includes(\"Z\") || UpperProtein.includes(\" \") || (!isAlpha(UpperProtein))) ? setButton(true) : setButton(false)\n\n   }\n\n\n  const handleInput = (event) => {\n    event.preventDefault();\n    setProtein(event.target.value); //변수 저장 완료\n    // const UpperProtein = protein.toUpperCase();\n    // UpperProtein.includes('G' ||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n  };\n  \n  \n\n\n\n\n\n    \n    //api post\n\n    // prediction request\nconst post = (seq) => {\n  //Promise로 fetch를 감싼다\n  return new Promise((resolve, reject) => {\n    \n    \n    fetch(\"/api/Input\", {\n            method : \"POST\",  //메소드 지정\n            headers : {       //데이터 타입 지정\n                \"Content-Type\":\"application/json; charset=utf-8\"\n            },\n            body: JSON.stringify({proteinName:seq}) //데이터 JSON문자열화 후 body에 저장\n        })\n        .then(res=>{  //리턴값이 있으면 리턴값에 맞는 req지정\n            console.log(\"search_fetch_check:\",res)\n            return res.json();\n        })\n        .then(res=> { //리턴값에 대한 처리\n            console.log(\"server_return_fetch:\",res);\n            //res 값에 따른 결과 처리       \n            if(res == null){\n              console.log(\"데이터 가져오기 실패\");\n            }\n            setProteinSearchID(res);\n            resolve(res);\n           \n            // localStorage.setItem('pdb_protein', res);\n            //console.log(pdb_predict);\n        });\n    });\n  };\n\n  // button 클릭\n  const confirm = async (event) => {\n    // 확인 후 다음 페이지\n    setLoading(true);\n    event.preventDefault();\n    // output저장\n   await post(protein);\n   console.log(\"proteinSearchID_test:\", proteinSearchID);\n   \n\n   localStorage.setItem(\"proteinId\", proteinSearchID);\n   localStorage.setItem(\"proteinSeq\", protein);\n   \n   if (proteinSearchID!=null) { //로컬 스토리지에 올릴 데이터가 있으면\n    localStorage.setItem(\"proteinId\", proteinSearchID['proteinId']);\n    localStorage.setItem(\"proteinSeq\", protein);\n    //window.location.href = \"/proteinInput\";\n    setLoading(false);\n  } else {\n    setLoading(true);\n  }\n   \n\n\n  };\n  \n\n\n\n\n\n\n      \n    // localStorage.setItem(\"searchProteinId\", protein);\n    //localstorage 업로드\n  \n\n  return (\n    <div className=\"page\">\n      <div className=\"titleprotein\">단백질 시퀀스를 입력해 주세요</div>\n\n      <div className=\"contentWrap\">\n        <div className=\"inputTitle\">단백질 시퀀스</div>\n        <div className=\"inputWrap\">\n          <input\n            className=\"input\"\n            value={protein} //input으로 받은 프로틴 시퀀스\n            onChange={handleInput}\n            onKeyUp={changeButton}\n            \n          />\n\n          {/* place holder 넣어 보기 */}\n        </div>\n\n        <div className=\"errorMessageWrap\">올바른 시퀀스를 입력해 주세요</div>\n      </div>\n      <div>\n        <button \n        disabled={button} \n        onClick={confirm} \n        className=\"bottomButton\">\n          확인\n        </button>\n        \n      </div>\n      <div className=\"inputTitle\"> \n        단백질 3D 구조 시각화 화면입니다\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}