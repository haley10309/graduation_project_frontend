{"ast":null,"code":"var _jsxFileName = \"/Users/hayungyoo/konfold/client/src/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [protein, setProtein] = useState(\"\");\n\n  // function Ptest(e) {\n  //   window.location.href = \"/Login\";\n  //   axios.post(\"/Login\", { proName: this.state.protein });\n  // }\n  const postEmail = async () => {\n    this.setState({\n      isLoading: true\n    });\n    await axios.post(\"https://{post 요청 url}/email\", {\n      email: this.state.email\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(response => {\n      this.setState({\n        message: \"이메일을 확인해주세요.\",\n        error: false\n      });\n      console.log(response.data);\n    }).catch(response => {\n      this.setState({\n        message: response.response.data.validation.email,\n        error: true\n      });\n    });\n    this.setState({\n      isLoading: false\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleprotein\",\n      children: \"\\uB2E8\\uBC31\\uC9C8 \\uC2DC\\uD000\\uC2A4\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputTitle\",\n        children: \"\\uB2E8\\uBC31\\uC9C8 \\uC2DC\\uD000\\uC2A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          value: protein //input으로 받은 프로틴 시퀀스\n          ,\n          onChange: e => setProtein(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessageWrap\",\n        children: \"\\uC62C\\uBC14\\uB978 \\uC2DC\\uD000\\uC2A4\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: false,\n        onClick: postEmail,\n        className: \"bottomButton\",\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"amJzRqsOhOgvFszzXuFiCjwTugE=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","Link","jsxDEV","_jsxDEV","Login","_s","protein","setProtein","postEmail","setState","isLoading","post","email","state","headers","Accept","then","response","message","error","console","log","data","catch","validation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/hayungyoo/konfold/client/src/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Login() {\n  const [protein, setProtein] = useState(\"\");\n\n  // function Ptest(e) {\n  //   window.location.href = \"/Login\";\n  //   axios.post(\"/Login\", { proName: this.state.protein });\n  // }\n  const postEmail = async () => {\n    this.setState({ isLoading: true });\n\n    await axios\n      .post(\n        \"https://{post 요청 url}/email\",\n        {\n          email: this.state.email,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n          },\n        }\n      )\n      .then((response) => {\n        this.setState({\n          message: \"이메일을 확인해주세요.\",\n          error: false,\n        });\n        console.log(response.data);\n      })\n      .catch((response) => {\n        this.setState({\n          message: response.response.data.validation.email,\n          error: true,\n        });\n      });\n\n    this.setState({ isLoading: false });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"titleprotein\">단백질 시퀀스를 입력해 주세요</div>\n\n      <div className=\"contentWrap\">\n        <div className=\"inputTitle\">단백질 시퀀스</div>\n        <div className=\"inputWrap\">\n          <input\n            className=\"input\"\n            value={protein} //input으로 받은 프로틴 시퀀스\n            onChange={(e) => setProtein(e.target.value)}\n          />\n          {/* place holder 넣어 보기 */}\n        </div>\n\n        <div className=\"errorMessageWrap\">올바른 시퀀스를 입력해 주세요</div>\n      </div>\n      <div>\n        <button disabled={false} onClick={postEmail} className=\"bottomButton\">\n          확인\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}