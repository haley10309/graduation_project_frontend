{"ast":null,"code":"var _jsxFileName = \"/Users/hayungyoo/konfold/client/src/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport proteinName from \"./proteinNames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [protein, setProtein] = useState(\"\"); //입력 값 변수 [입력값, 입력값 변경]\n\n  const confirm = () => {\n    // 확인 후 다음 페이지\n    window.location.href = \"/Login\";\n    setProtein(e.target.value);\n    console.log(protein);\n    {\n      this.state.protein.map(c => {\n        return /*#__PURE__*/_jsxDEV(\"proteinName\", {}, c.protein, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 16\n        }, this);\n      });\n    }\n    axios.post(\"/api/proteinInput\", {\n      proName: this.state.protein\n    }).then(res => console.log(\"Posting data\", res)).catch(error => {\n      console.log(\"error occurred: \", error.response);\n    });\n    //api post\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleprotein\",\n      children: \"\\uB2E8\\uBC31\\uC9C8 \\uC2DC\\uD000\\uC2A4\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputTitle\",\n        children: \"\\uB2E8\\uBC31\\uC9C8 \\uC2DC\\uD000\\uC2A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          value: protein //input으로 받은 프로틴 시퀀스\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessageWrap\",\n        children: \"\\uC62C\\uBC14\\uB978 \\uC2DC\\uD000\\uC2A4\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: false,\n        onClick: confirm,\n        className: \"bottomButton\",\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"amJzRqsOhOgvFszzXuFiCjwTugE=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","Link","proteinName","jsxDEV","_jsxDEV","Login","_s","protein","setProtein","confirm","window","location","href","e","target","value","console","log","state","map","c","fileName","_jsxFileName","lineNumber","columnNumber","post","proName","then","res","catch","error","response","className","children","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/hayungyoo/konfold/client/src/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport proteinName from \"./proteinNames\";\n\nexport default function Login() {\n  const [protein, setProtein] = useState(\"\"); //입력 값 변수 [입력값, 입력값 변경]\n\n  const confirm = () => {\n    // 확인 후 다음 페이지\n    window.location.href = \"/Login\";\n    setProtein(e.target.value);\n    console.log(protein);\n    {\n      this.state.protein.map((c) => {\n        return <proteinName key={c.protein} />;\n      });\n    }\n\n    axios\n      .post(\"/api/proteinInput\", { proName: this.state.protein })\n      .then((res) => console.log(\"Posting data\", res))\n      .catch((error) => {\n        console.log(\"error occurred: \", error.response);\n      });\n    //api post\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"titleprotein\">단백질 시퀀스를 입력해 주세요</div>\n\n      <div className=\"contentWrap\">\n        <div className=\"inputTitle\">단백질 시퀀스</div>\n        <div className=\"inputWrap\">\n          <input\n            className=\"input\"\n            value={protein} //input으로 받은 프로틴 시퀀스\n          />\n          {/* place holder 넣어 보기 */}\n        </div>\n\n        <div className=\"errorMessageWrap\">올바른 시퀀스를 입력해 주세요</div>\n      </div>\n      <div>\n        <button disabled={false} onClick={confirm} className=\"bottomButton\">\n          확인\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}