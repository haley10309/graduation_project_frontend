{"ast":null,"code":"var _jsxFileName = \"/Users/hayungyoo/konfold/client/src/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [protein, setProtein] = useState(\"\"); //입력 값 변수 [입력값, 입력값 변경]\n\n  const handleInput = event => {\n    setProtein(event.target.value); //변수 저장 완료\n  };\n\n  useEffect(() => {\n    axios.get(\"http://proteinput/api\").then(res => {\n      console.log(\"getting from...\", res.data);\n    }).catch(err => console.log(\"에러!\", err));\n  }, []);\n  const confirm = event => {\n    // 확인 후 다음 페이지\n    event.preventDefault();\n    const userProtein = {\n      proteinInput: protein\n    };\n    //window.location.href = \"/Login\";\n    console.log(protein);\n    axios.post(\"http://proteinput/api\", {\n      userProtein\n    }).then(res => console.log(\"posting data\", res.data)).catch(error => {\n      console.log(\"음..error occurred: \", error.response);\n    });\n    //api post\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleprotein\",\n      children: \"\\uB2E8\\uBC31\\uC9C8 \\uC2DC\\uD000\\uC2A4\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputTitle\",\n        children: \"\\uB2E8\\uBC31\\uC9C8 \\uC2DC\\uD000\\uC2A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          value: protein //input으로 받은 프로틴 시퀀스\n          ,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessageWrap\",\n        children: \"\\uC62C\\uBC14\\uB978 \\uC2DC\\uD000\\uC2A4\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: false,\n        onClick: confirm,\n        className: \"bottomButton\",\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n// http://localhost:5000/api/proteinInput\n_s(Login, \"PzJB35YqgHRXF4kOudv3Uu+6+QA=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","jsxDEV","_jsxDEV","Login","_s","protein","setProtein","handleInput","event","target","value","get","then","res","console","log","data","catch","err","confirm","preventDefault","userProtein","proteinInput","post","error","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/hayungyoo/konfold/client/src/Login.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Login() {\n  const [protein, setProtein] = useState(\"\"); //입력 값 변수 [입력값, 입력값 변경]\n\n  const handleInput = (event) => {\n    setProtein(event.target.value); //변수 저장 완료\n  };\n  useEffect(() => {\n    axios\n      .get(\"http://proteinput/api\")\n      .then((res) => {\n        console.log(\"getting from...\", res.data);\n      })\n      .catch((err) => console.log(\"에러!\", err));\n  }, []);\n\n  const confirm = (event) => {\n    // 확인 후 다음 페이지\n    event.preventDefault();\n    const userProtein = {\n      proteinInput: protein,\n    };\n    //window.location.href = \"/Login\";\n    console.log(protein);\n    axios\n      .post(\"http://proteinput/api\", {\n        userProtein,\n      })\n      .then((res) => console.log(\"posting data\", res.data))\n      .catch((error) => {\n        console.log(\"음..error occurred: \", error.response);\n      });\n    //api post\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"titleprotein\">단백질 시퀀스를 입력해 주세요</div>\n\n      <div className=\"contentWrap\">\n        <div className=\"inputTitle\">단백질 시퀀스</div>\n        <div className=\"inputWrap\">\n          <input\n            className=\"input\"\n            value={protein} //input으로 받은 프로틴 시퀀스\n            onChange={handleInput}\n          />\n\n          {/* place holder 넣어 보기 */}\n        </div>\n\n        <div className=\"errorMessageWrap\">올바른 시퀀스를 입력해 주세요</div>\n      </div>\n      <div>\n        <button disabled={false} onClick={confirm} className=\"bottomButton\">\n          확인\n        </button>\n      </div>\n    </div>\n  );\n}\n// http://localhost:5000/api/proteinInput\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C,MAAMS,WAAW,GAAIC,KAAK,IAAK;IAC7BF,UAAU,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAClC,CAAC;;EACDb,SAAS,CAAC,MAAM;IACdE,KAAK,CACFY,GAAG,CAAC,uBAAuB,CAAC,CAC5BC,IAAI,CAAEC,GAAG,IAAK;MACbC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,GAAG,CAACG,IAAI,CAAC;IAC1C,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKJ,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEG,GAAG,CAAC,CAAC;EAC5C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,OAAO,GAAIX,KAAK,IAAK;IACzB;IACAA,KAAK,CAACY,cAAc,EAAE;IACtB,MAAMC,WAAW,GAAG;MAClBC,YAAY,EAAEjB;IAChB,CAAC;IACD;IACAS,OAAO,CAACC,GAAG,CAACV,OAAO,CAAC;IACpBN,KAAK,CACFwB,IAAI,CAAC,uBAAuB,EAAE;MAC7BF;IACF,CAAC,CAAC,CACDT,IAAI,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,GAAG,CAACG,IAAI,CAAC,CAAC,CACpDC,KAAK,CAAEO,KAAK,IAAK;MAChBV,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAES,KAAK,CAACC,QAAQ,CAAC;IACpD,CAAC,CAAC;IACJ;EACF,CAAC;;EAED,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBzB,OAAA;MAAKwB,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAEpD7B,OAAA;MAAKwB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BzB,OAAA;QAAKwB,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACzC7B,OAAA;QAAKwB,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxBzB,OAAA;UACEwB,SAAS,EAAC,OAAO;UACjBhB,KAAK,EAAEL,OAAQ,CAAC;UAAA;UAChB2B,QAAQ,EAAEzB;QAAY;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACtB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGE,eAEN7B,OAAA;QAAKwB,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpD,eACN7B,OAAA;MAAAyB,QAAA,eACEzB,OAAA;QAAQ+B,QAAQ,EAAE,KAAM;QAACC,OAAO,EAAEf,OAAQ;QAACO,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAEpE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AACA;AAAA3B,EAAA,CA5DwBD,KAAK;AAAAgC,EAAA,GAALhC,KAAK;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}